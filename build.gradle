buildscript {
    ext {
        springBootVersion = '2.4.1'
    }
    repositories {
//        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://maven.aliyun.com/repository/public" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
plugins {
    id "net.ltgt.apt" version "0.21"
}
apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


//group = 'oldmoon.frame'
//version = '1.0.1'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()// 优先从本地依赖库获取依赖，若获取不到，再到后续仓库获取依赖
    maven { url "https://maven.aliyun.com/repository/public" }
    mavenCentral()
}

subprojects {
    buildscript {
        ext {
            springBootVersion = '2.4.1'
        }
        repositories {
            maven { url "https://maven.aliyun.com/repository/public" }
        }
        dependencies {
            classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        }
    }

    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group = "oldmoon.top"
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenLocal()// 优先从本地依赖库获取依赖，若获取不到，再到后续仓库获取依赖
        maven { url "https://maven.aliyun.com/repository/public" }
        mavenCentral()
    }

    // 管理子模块特殊依赖包版本号
    ext {
        junitVersion = "4.11"
        druidVersion = "1.1.10"
        mybatisVersion = "1.3.2"
        lombokVersion = "1.18.8"
        fastjsonVersion = "1.2.9"
        jacksonVersion = "2.10.0"
        elasticsearchVersion = "7.4.2" // ElasticSearch所有相关包版本号请保持一致，防止各种不明原因报错
        elasticsearchClientVersion = "7.4.2"
    }
    // 管理子模块通用依赖
    dependencies {

        compile 'org.springframework.boot:spring-boot-starter-web',
                'org.slf4j:slf4j-api',
                'org.slf4j:jcl-over-slf4j',

                "org.projectlombok:lombok:${lombokVersion}",
                "com.alibaba:fastjson:${fastjsonVersion}",
//                "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}",
//                "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}",
//                "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
        testCompile(group: 'junit', name: 'junit', version: "${junitVersion}")

    }

}